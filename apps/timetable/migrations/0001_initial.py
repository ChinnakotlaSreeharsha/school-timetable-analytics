# Generated by Django 4.2.7 on 2025-09-04 07:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('section', models.CharField(blank=True, max_length=10)),
                ('grade_level', models.PositiveIntegerField()),
                ('academic_year', models.CharField(max_length=9)),
                ('total_students', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes',
                'ordering': ['grade_level', 'section'],
            },
        ),
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('room_number', models.CharField(max_length=20, unique=True)),
                ('room_type', models.CharField(choices=[('LECTURE', 'Lecture Hall'), ('LAB', 'Laboratory'), ('COMPUTER', 'Computer Lab'), ('LIBRARY', 'Library'), ('AUDITORIUM', 'Auditorium'), ('SPORTS', 'Sports Hall')], default='LECTURE', max_length=20)),
                ('capacity', models.PositiveIntegerField()),
                ('floor', models.CharField(blank=True, max_length=10)),
                ('building', models.CharField(blank=True, max_length=50)),
                ('has_projector', models.BooleanField(default=False)),
                ('has_computer', models.BooleanField(default=False)),
                ('has_whiteboard', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Class Room',
                'verbose_name_plural': 'Class Rooms',
                'ordering': ['room_number'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('head', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_break', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Period',
                'verbose_name_plural': 'Periods',
                'ordering': ['order', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('established', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'School',
                'verbose_name_plural': 'Schools',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('credits', models.PositiveIntegerField(default=1)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='timetable.department')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('specialization', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('max_periods_per_day', models.PositiveIntegerField(default=6)),
                ('max_periods_per_week', models.PositiveIntegerField(default=30)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to='timetable.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
                'ordering': ['employee_id'],
            },
        ),
        migrations.CreateModel(
            name='TimetableTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('grade_levels', models.CharField(help_text="Comma-separated grade levels, e.g., '9,10,11'", max_length=50)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='timetable.department')),
            ],
            options={
                'verbose_name': 'Timetable Template',
                'verbose_name_plural': 'Timetable Templates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THU', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday'), ('SUN', 'Sunday')], max_length=3)),
                ('academic_year', models.CharField(max_length=9)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='timetable.classroom')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable.period')),
                ('school_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='timetable.class')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='timetable.subject')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='timetable.teacher')),
            ],
            options={
                'verbose_name': 'Time Slot',
                'verbose_name_plural': 'Time Slots',
                'ordering': ['day_of_week', 'period__order'],
                'unique_together': {('school_class', 'day_of_week', 'period', 'academic_year')},
            },
        ),
        migrations.AddField(
            model_name='department',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='timetable.school'),
        ),
        migrations.CreateModel(
            name='ConflictLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conflict_type', models.CharField(choices=[('TEACHER_DOUBLE_BOOK', 'Teacher Double Booking'), ('ROOM_DOUBLE_BOOK', 'Room Double Booking'), ('CLASS_DOUBLE_BOOK', 'Class Double Booking')], max_length=30)),
                ('description', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('time_slot1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicts_as_slot1', to='timetable.timeslot')),
                ('time_slot2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicts_as_slot2', to='timetable.timeslot')),
            ],
            options={
                'verbose_name': 'Conflict Log',
                'verbose_name_plural': 'Conflict Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='class',
            name='class_teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='timetable.teacher'),
        ),
        migrations.AddField(
            model_name='class',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='timetable.department'),
        ),
        migrations.AlterUniqueTogether(
            name='class',
            unique_together={('name', 'section', 'academic_year')},
        ),
    ]
